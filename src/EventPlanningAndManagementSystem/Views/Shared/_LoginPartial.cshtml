@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject EventPlanningAndManagementSystem.Data.EventPlanningAndManagementSystem.Data.ApplicationDbContext DbContext

<ul class="navbar-nav align-items-center gap-1">
    @if (SignInManager.IsSignedIn(User))
    {
        var userId = UserManager.GetUserId(User);
        var profile = DbContext.UsersProfiles.FirstOrDefault(p => p.UserId == userId);
        var displayName = profile?.FullName ?? "User";

        <li class="nav-item">
             <a class="nav-link text-dark fw-semibold transition-nav" asp-controller="UserProfile" asp-action="Index" title="Profile">
                 Hello @displayName!
             </a>
        </li>

        <li class="nav-item">
            <form class="form-inline m-0" asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark px-0 transition-nav">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark transition-nav" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark transition-nav" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

<style>
    .transition-nav {
        transition: color 0.2s, background 0.2s;
        border-radius: 0.25rem;
    }
    .transition-nav:hover, .transition-nav:focus {
        background: #f8f9fa;
        color: #0d6efd;
    }
</style>

